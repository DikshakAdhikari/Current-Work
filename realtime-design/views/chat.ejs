<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    
</head>
<body>
    <h1>REDIS</h1>
    <div id="messages">
        <input type="text" id="message" name="message">
        <br/>
        <br/>
        <button onclick="emitData()" >Submit</button>
    </div>
    <div id="joined" ></div>
</body>
<script src="https://cdn.socket.io/4.7.4/socket.io.min.js"></script>
<script>
    const socket= io("http://localhost:5000")
    const emitData = ()=> {
        const message= document.querySelector("#message").value
        socket.emit("message", {message, from: "<%= username %>"})
    }

    socket.on("message", ({ from, message }) => {
        const messageElement = document.createElement("h2");
        messageElement.innerText = `${from}: ${message}`;
        document.querySelector("#messages").appendChild(messageElement);
        //What above text is doing is 1st creating a <h2> tag wrapper or element then providing inner text to the <h2> tag i.e. <h2>from:message</h2> , then putting the created expressing below the input tag. Why input tag cz our input tag has id-> message. 
    });

    socket.on("joined", username => {
        const element= document.createElement("h5");
        element.innerText= `${username} has joined!`
        document.querySelector("#joined").appendChild(element)
    } )
</script>
</html>